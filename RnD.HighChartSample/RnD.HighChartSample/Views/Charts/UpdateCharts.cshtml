@{
    ViewBag.Title = "Update Charts";
}
<div id="barChartsPage">
    <div id="columnChartUpdateZone">
        <fieldset>
            <legend>Update Chart:</legend>
            <div style="margin-top: 10px; margin-bottom: 10px;">
                <label>
                    Category:</label>
                <select>
                    <option value="0">Funding Agency</option>
                    <option value="1">Funding Source</option>
                    <option value="2">Funding Type</option>
                    <option value="3">Fiscal Year</option>
                </select>
            </div>
            <div style="margin-bottom: 10px;">
                <label>
                    Values:</label>
                <input type="checkbox" checked="checked" name="cbCommitted" value="0" /><label>Committed</label><input
                    type="checkbox" name="cbDisbursed" value="1" /><label>Disbursed</label><input type="checkbox"
                        name="cbExpended" value="2" /><label>Expended</label>
            </div>
            <div style="margin-bottom: 10px;">
                <label>
                    Series:</label>
                <select>
                    <option value="0">1st Level</option>
                    <option value="1">2nd Level</option>
                    <option value="2">3rd Level</option>
                </select>
            </div>
            <button class="button" id="btnColumnUpdate">
                Update</button>
        </fieldset>
    </div>
    <div id="columnChartZone">
        <div id="columnChart">
        </div>
    </div>
</div>
<script type="text/javascript">

    //Funding Agency
    //IDA
    //USAID
    //ADB
    //IBRD
    //IDB

    //Funding Source
    //WB
    //USA
    //Japan
    //UK
    //UEA

    //Funding Type
    //Loan
    //Grant
    //GOP

    //Global Variable For Chart
    var columnChart;

    function GenerateColumnChart(titleText, xAxisCategories, yAxisTitleText, series) {

        //define the column chart by Highcharts
        columnChart = new Highcharts.Chart({

            chart: {
                renderTo: 'columnChart',
                type: 'column',
                width: 400,
                height: 200
            },
            title: {
                text: titleText //'Stacked column chart'
            },
            xAxis: {
                categories: xAxisCategories //['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']
            },
            yAxis: {
                min: 0,
                title: {
                    text: yAxisTitleText //'Total fruit consumption'
                },
                stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            legend: {
                align: 'right',
                x: -70,
                verticalAlign: 'top',
                y: 20,
                floating: true,
                backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColorSolid) || 'white',
                borderColor: '#CCC',
                borderWidth: 1,
                shadow: false
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.x + '</b><br/>' +
                        this.series.name + ': ' + this.y + '<br/>' +
                        'Total: ' + this.point.stackTotal;
                }
            },
            plotOptions: {
                column: {
                    stacking: 'normal',
                    dataLabels: {
                        enabled: true,
                        color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                    }
                }
            },
            series: series
            //            series: [{
            //                name: 'John',
            //                data: [5, 3, 4, 7, 2]
            //            }, {
            //                name: 'Jane',
            //                data: [2, 2, 3, 2, 1]
            //            }, {
            //                name: 'Joe',
            //                data: [3, 4, 4, 2, 5]
            //            }]
        });

    }

    $(document).ready(function () {

        //define the column chart by Highcharts
        columnChart = new Highcharts.Chart({

            chart: {
                renderTo: 'columnChart',
                type: 'column',
                width: 400,
                height: 200
            },
            title: {
                text: 'Funding Agency Chart'
            },
            subtitle: {
                text: 'Source: UNDP Bangladesh'
            },
            xAxis: {
                categories: [
                    'IDA',
                    'USAID',
                    'ADB',
                    'IBRD',
                    'IDB'
                ]
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Amount (TK)'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                    '<td style="padding:0"><b>{point.y:.1f} tk</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: 'Committed',
                data: [500050, 120000, 650000, 985000, 54000]

            }]

        });

        $('#btnColumnUpdate').click(function () {

            $('#columnChart').remove();

            $("#columnChartZone").append("<div id='columnChart'></div>");

            $.ajax({
                url: "/Charts/ServerBarChartsData",
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    //console.log(data);
                    //alert(data);

                    var titleText = data.TitleText;
                    var xAxisCategories = data.XAxisCategories;
                    var yAxisTitleText = data.YAxisTitleText;
                    var series = [];

                    for (var index in data.Series) {
                        series.push({
                            name: data.Series[index].SeriesName,
                            data: data.Series[index].SeriesDatas
                        })
                        //console.log(data.Series[serie].SeriesName);
                        //console.log(data.Series[serie].SeriesDatas);
                    }

                    //GenerateColumnChart();
                    GenerateColumnChart(titleText, xAxisCategories, yAxisTitleText, series);

                },
                error: function (objAjaxRequest, strError) {
                    var respText = objAjaxRequest.responseText;
                    console.log(respText);
                    //alert(respText);
                }

            });

            return false;

        });

    });

</script>
